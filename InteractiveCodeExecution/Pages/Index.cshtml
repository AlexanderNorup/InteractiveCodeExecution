@page
@using Microsoft.Extensions.Options
@inject IOptions<InteractiveCodeExecution.Services.DockerConfiguration> dockerConfig
@model IndexModel
@{
    ViewData["Title"] = "Home page";
    ViewData["MonacoVersion"] = Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT") == "Development" ? "dev" : "min";
}

<div class="row text-center">
    <div class="col">
        <h1 class="display-4">Welcome to the Interactive Code Execution</h1>
        <p>By <b>Alexander Nørup</b>, <a href="mailto:alnoe20@student.sdu.dk">alnoe20@student.sdu.dk</a></p>
    </div>
</div>
<hr />

<!-- Toolbar with buttons to create new files and run -->
<div class="row g-0">
    <div class="col-12 codeEditorToolbar">
        <div>
            <!-- File buttons -->
            <a id="newFileBtn" title="New file">
                <span class="material-symbols-outlined">
                    note_add
                </span>
            </a>
            <a id="uploadFileBtn" title="Upload file">
                <span class="material-symbols-outlined">
                    upload_file
                </span>
            </a>
        </div>
        <div>
            <!-- Run -->
            <a id="startStreamingButton" title="Open livestream">
                <span class="material-symbols-outlined">
                    desktop_windows
                </span>
            </a>
            <a id="runBtn" title="Run">
                <span class="material-symbols-outlined">
                    play_arrow
                </span>
            </a>
            <a id="abortBtn" class="d-none" title="Stop">
                <span class="material-symbols-outlined">
                    stop
                </span>
            </a>
        </div>
    </div>
</div>

<!-- Code editor -->
<div class="row g-0" id="editorContainer">
    <div class="col-sm-2 editorFileListContainer">
        <h4 class="ps-1">Files</h4>
        <ul class="fileList" id="fileList">
        </ul>
    </div>
    <div class="col-sm-10">
        <div id="editor" class="codeEditor">
        </div>
    </div>
</div>

<!-- Log -->
<div class="row g-0 codeEditorFooter d-flex flex-row">
    <div class="col-sm-2 flex-grow-0 flex-shrink-0">
    </div>
    <div class="col-sm-10 flex-grow-0 flex-shrink-0 logContainer">
        <ul class="list-unstyled" id="log"></ul>
    </div>
</div>

<!-- Temporary screen -->
<div class="container">
    <div class="row mt-4"> 
        <div class="col">
            <div id="canvasContainer" class="d-flex d-none streamCanvasContainer flex-column" tabindex="1">
                <canvas class="streamCanvas" id="streamCanvas" width="854" height="480" />
            </div>
         </div>
    </div>
</div>

<!-- Temporary configuration -->
<div class="row mt-4">
    <div class="col">
        <div class="accordion" id="configAccordion">
        <div class="accordion-item">
            <h2 class="accordion-header">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseConfig" aria-expanded="false" aria-controls="collapseOne">
                    Configuration
                </button>
            </h2>
                <div id="collapseConfig" class="accordion-collapse collapse" data-bs-parent="#configAccordion">
                <div class="accordion-body">
                    <h4>This config panel is temporary! All these values will be automatically set behind the scenes at some point.</h4>
                    <div class="mb-3">
                        <label for="uniqueUserIdInput" class="form-label">Enter a unique user-id</label>
                        <input type="text" class="form-control" id="uniqueUserIdInput" aria-describedby="uuidHelp" value="@(Guid.NewGuid().ToString())">
                        <div id="uuidHelp" class="form-text">The field has been pre-populated by a random string you can use.</div>
                    </div>

                        <div class="mb-3">
                            <label for="payloadTypeSelector" class="form-label">Select code type</label>
                            <select class="form-select" id="payloadTypeSelector">
                                @foreach (var (name, image) in dockerConfig.Value.PayloadImageTypeMapping)
                                {
                                    <option value="@name">@name (@image)</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="execInput" class="form-label">Exec command:</label>
                            <input type="text" class="form-control" id="execInput" placeholder="dotnet run" value="dotnet run --project Project.csproj">
                        </div>
                        <div class="mb-3">
                            <label for="buildInput" class="form-label">Build command:</label>
                            <input type="text" class="form-control" id="buildInput" placeholder="dotnet build ..." value="">
                        </div>
                        <div class="mb-3">
                            <label for="buildInput" class="form-label">Background command:</label>
                            <input type="text" class="form-control" id="backgroundInput" placeholder="bash /startup.sh" value="">
                        </div>
                </div>
            </div>
        </div>
    </div>
 </div>




@section Styles {
    <link rel="stylesheet" type="text/css" data-name="vs/editor/editor.main" href="js/monaco-editor/@(ViewData["MonacoVersion"])/vs/editor/editor.main.css">
}

@section Scripts {

    <!-- SignalR MUST be loaded before the Monaco editor-->
    <!-- SignalR -->
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/signalr/dist/browser/signalr-protocol-msgpack.min.js"></script>

    <!-- Monaco Editor -->
    <script type="text/javascript" src="~/js/monaco-editor/@(ViewData["MonacoVersion"])/vs/loader.js"></script>
    <script>require.config({ paths: { vs: '/js/monaco-editor/@(ViewData["MonacoVersion"])/vs' } });</script>
    
    <!-- Custom user Scripts-->
    <script type="text/javascript" src="~/js/EditorFile.js" asp-append-version="true"></script>
    <script type="text/javascript" src="~/js/codeEdtior.js" asp-append-version="true"></script>
    <script type="text/javascript" src="~/js/interactiveCodeExecution.js" asp-append-version="true"></script>
    <script type="text/javascript" src="~/js/vncController.js" asp-append-version="true"></script>
}