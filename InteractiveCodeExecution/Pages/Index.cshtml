@page
@using Microsoft.Extensions.Options
@inject IOptions<InteractiveCodeExecution.Services.DockerConfiguration> dockerConfig
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="row text-center">
    <div class="col">
    <h1 class="display-4">Welcome to the Interactive Code Execution PoC</h1>
    <p>By <b>Alexander Nørup</b>, <a href="mailto:alnoe20@student.sdu.dk">alnoe20@student.sdu.dk</a></p>
    </div>
</div>
<hr />

<div class="row">
    <div class="col-6">
        <h2>Controls</h2>
        
        <div class="mb-3">
            <label for="payloadTypeSelector" class="form-label">Select code type</label>
            <select class="form-select" id="payloadTypeSelector">
                @foreach(var (name, image) in dockerConfig.Value.PayloadImageTypeMapping){
                    <option value="@name">@name (@image)</option>
                }
            </select>
        </div>
        <div class="mb-3">
            <label for="codeInput" class="form-label"><code>Program.cs</code></label>
            <textarea class="form-control font-monospace" id="codeInput" rows="5" placeholder="print('Hello World');">Console.WriteLine("Hello World");</textarea>
        </div>
        <div class="mb-3">
            <label for="codeInput2" class="form-label"><code>Project.csproj</code></label>
            <textarea class="form-control font-monospace" id="codeInput2" rows="10">
&lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&gt;
  &lt;PropertyGroup&gt;
    &lt;OutputType&gt;Exe&lt;/OutputType&gt;
    &lt;TargetFramework&gt;net8.0&lt;/TargetFramework&gt;
    &lt;Nullable&gt;enable&lt;/Nullable&gt;
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;
  &lt;/PropertyGroup&gt;
&lt;/Project&gt;</textarea>
        </div>
        <div class="mb-3">
            <label for="execInput" class="form-label">Exec command:</label>
            <input type="text" class="form-control" id="execInput" placeholder="dotnet run" value="dotnet run --project Project.csproj">
        </div>
        <div class="mb-3">
            <label for="buildInput" class="form-label">Build command:</label>
            <input type="text" class="form-control" id="buildInput" placeholder="dotnet build ..." value="">
        </div>
        <div class="mb-3">
            <label for="buildInput" class="form-label">Background command:</label>
            <input type="text" class="form-control" id="backgroundInput" placeholder="bash /startup.sh" value="">
        </div>
        <div class="mb-3">
            <button class="btn btn-success me-2" type="button" id="runBtn" disabled>Run!</button>
            <button class="btn btn-danger" disabled="true" type="button" id="abortStreamingBtn" disabled>Abort!</button>
        </div>

    </div>
    <div class="col-6">
        <div id="canvasContainer" class="d-none">
            <canvas id="streamCanvas" width="854" height="480" />
        </div>

        <div class="d-flex justify-content-between">
            <h2>Log</h2>
            <button class="btn btn-sm btn-primary" id="startStreamingButton">Watch screen</button>
            <button class="btn btn-sm btn-danger" id="clearLogsBtn">Clear Logs</button>
        </div>
        <div style="max-height: 70vh; overflow-y: auto;">
            <ul class="list-unstyled" id="log"></ul>
        </div>
    </div>
</div>


<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/signalr/dist/browser/signalr-protocol-msgpack.min.js"></script>
<script src="~/js/interactiveCodeExecution.js"></script>
<script src="~/js/vncController.js"></script>